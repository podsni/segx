name: Release seg

on:
  workflow_dispatch:
  release:
    types:
      - published

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run release

      - name: Read package metadata
        id: package_info
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "name=${NAME}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Compile standalone binary
        run: bun build ./dist/index.js --compile --outfile segx-linux-x64

      - name: Package release artifacts
        run: |
          ARCHIVE="${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}.tar.gz"
          tar -czf "$ARCHIVE" dist
          tar -czf segx-linux-x64.tar.gz segx-linux-x64
          echo "ARCHIVE_NAME=$ARCHIVE" >> "$GITHUB_ENV"
          echo "BINARY_ARCHIVE=segx-linux-x64.tar.gz" >> "$GITHUB_ENV"

      - name: Normalize package.json metadata
        run: npm pkg fix

      - name: Publish package to npm
        id: publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PACKAGE_NAME: ${{ steps.package_info.outputs.name }}
        run: |
          set +e
          npm publish --provenance --access public 2>&1 | tee publish.log
          status=${PIPESTATUS[0]}

          if [ "$status" -eq 0 ]; then
            echo "status=success" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if grep -q "E403" publish.log; then
            echo "::warning::npm publish skipped for ${PACKAGE_NAME}. Pastikan Anda memiliki hak publish atau gunakan nama paket lain." 
            echo "status=forbidden" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          exit "$status"

      - name: Upload dist to GitHub Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/gzip

      - name: Upload binary to GitHub Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.BINARY_ARCHIVE }}
          asset_name: segx-linux-x64.tar.gz
          asset_content_type: application/gzip

      - name: Upload artifacts to workflow run
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: segx-release-assets
          path: |
            ${{ env.ARCHIVE_NAME }}
            ${{ env.BINARY_ARCHIVE }}

      - name: Release summary
        run: |
          if [ "${{ steps.publish.outputs.status }}" = "forbidden" ]; then
            {
              echo "### npm publish"
              echo "- Status: ⚠️ Dilewati (403 Forbidden)"
              echo "- Paket: ${{ steps.package_info.outputs.name }}"
              echo "- Saran: Pastikan akun npm Anda memiliki akses atau gunakan nama paket yang berbeda."
            } >> "$GITHUB_STEP_SUMMARY"
          elif [ "${{ steps.publish.outputs.status }}" = "success" ]; then
            {
              echo "### npm publish"
              echo "- Status: ✅ Berhasil"
              echo "- Paket: ${{ steps.package_info.outputs.name }}@${{ steps.package_info.outputs.version }}"
              echo ""
              echo "### Release Assets"
              echo "- dist: ${{ env.ARCHIVE_NAME }}"
              echo "- binary: segx-linux-x64.tar.gz"
            } >> "$GITHUB_STEP_SUMMARY"
          else
            echo "### npm publish" >> "$GITHUB_STEP_SUMMARY"
          fi
